
weak_passwords = [
    '123456',
    '123456789',
    'Qwerty',
    'Password',
    '12345',
    '12345678',
    '111111',
    '1234567',
    '123123',
    'Qwerty123',
    '1q2w3e',
    '1234567890',
    'DEFAULT',
    '0',
    'Abc123',
    '654321',
    '123321',
    'Qwertyuiop',
    'Iloveyou',
    '666666',
]


class PasswordChecker():
    def __init__(self, password, weak_passwords):
        self.password = password
        self.weak_passwords = weak_passwords

    def is_password_length_ok(self):
        if len(self.password) > 8:
            return True
        else:
            return False

    def is_password_weak(self):
        if self.password in self.weak_passwords:
            return False
        else:
            return True

    def has_password_at_least_two_numbers(self):
        if len([x for x in self.password if x.isdigit()]) > 2:
            return True
        else:
            return False

    def has_password_at_least_two_capital_letters(self):
        if self.password.isupper():
            return True
        else:
            return False

    def do_password_validation(self):
        Kom p√• en smart funktion
        conditions =
            self.is_password_length_ok() == True, 
            self.is_password_length_ok() == True, 
            self.is_password_weak() == True, 
            self.has_password_at_least_two_numbers() == True, 
            self.has_password_at_least_two_capital_letters() == True
        if all(conditions):
            print(f'all is true')
        else:
            print(f'Not true')


my_instance = PasswordChecker(
    password='HH123sdfds', weak_passwords=weak_passwords)
print(my_instance.do_password_validation())

